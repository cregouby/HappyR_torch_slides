---
title: "{torch} {tabnet} et l'apprentissage profond par l'usage"
subtitle: "Atelier des Rencontres R 2025" 
author: "Christophe Regouby"
footer:  "[{torch}, {tabnet},... par l'usage](https://github.com/cregouby/Tutoriel_torch_slides)"
logo: "images/mlverse.png"
format: 
  revealjs: 
    theme: [night, slides.scss]
    highlight-style: a11y
    transition: fade
    slide-number: true
    chalkboard: true
    lightbox: true
    code-line-numbers: false
editor: visual
execute:
  freeze: auto
---

# Agenda {.smaller}

Bien commencer avec torch

\{torch\}

Le mlverse

\{tabnet\}

-  \{tabnet\} pour la rÃ©gression avec valeurs manquantes
  
-  \{tabnet\} pour la classification hiÃ©rarchique
  
-  \{tabnet\} pour la rÃ©gression logistique dÃ©sÃ©quilibrÃ©e

GPT2 avec R

Fine-Tuning de GPT2 en franÃ§ais avec un LORA

Un classifieur d'images avec ResNext50 fine-tuning

# Bien commencer avec torch

------------------------------------------------------------------------

![](images/clipboard-1733121037.png)

------------------------------------------------------------------------

```{r}
library(countdown)
```

```{r font-awesome-color}
# fill for font awesome icons
fa_fill <- "#C7B41D"
```

## Licence

<br> <br> Ce contenu est sous licence [Creative Commons Attribution-ShareAlike 4.0 International License](https://creativecommons.org/licenses/by-sa/4.0/) (CC BY-SA4.0).

## Checklist

<br>

`r fontawesome::fa("check", fill = fa_fill)` R & RStudio/un IDE confortable installÃ©s?

Â Â Â Â  J'ai R 4.5.0 et RStudio 2025.05.0 build 496

`r fontawesome::fa("check", fill = fa_fill)` {torch} est installÃ© ?

Â Â Â Â  `torch::torch_is_installed()`<br> Â Â Â Â  *Your system is ready!*

`r fontawesome::fa("check", fill = fa_fill)` Un accÃ©lÃ©rateur {torch} ?

Â Â Â Â  `torch::backends_xxxx_is_available()`<br> Â Â Â Â  *Your system has power!*

## Autres ressources {.smaller}

-   torch for R *website* <br> <https://torch.mlverse.org/>

-   Deep-Learning and scientific computing with R *book* <br> <https://skeydan.github.io/Deep-Learning-and-Scientific-Computing-with-R-torch/>

-   torch for R *cheatsheet* <br> <https://rstudio.github.io/cheatsheets/torch.pdf>

-   Deep-learning avec torch *Aide-mÃ©moire* <br> <https://github.com/rstudio/cheatsheets/blob/main/translations/french/torch_fr.pdf>

-   Tutoriel de UseR2021! <https://github.com/mlverse/torch-learnr>

-   Tutoriel des RencontresR 2024 par Tristan Mary-Huard : <https://stateofther.github.io/finistR2022/autodiff.html>

-   le blog AI de Posit (avec la catÃ©gorie torch): <https://blogs.rstudio.com/ai/#category:Torch>

::: footer
:::

# {torch}

## ![](images/clipboard-3520749809.png)![](images/clipboard-4058077362.png)

## ![](images/clipboard-154709511.png)

::: footer
source https://xkcd.com/1987/
:::

## ![](images/clipboard-1267880778.png)

::: footer
source https://xkcd.com/1987/
:::

## [![](images/clipboard-604787592.png)](https://torch.mlverse.org/)

::: footer
:::

## {torch}: pourquoi rÃ©inventer l'eau chaude?

::: small
-   **facilitÃ©** et  **frugalitÃ©**  d'installation sur CPU, GPU, MPS, ...

-   confort de RStudio pour dÃ©velopper, dÃ©verminer, visualiser

-   confort de R pour l'**indexation Ã  1**

-   la qualitÃ© des articles de blog de Posit AI blog

-   l'Ã©cosystÃ¨me des packages

-   plein de possibilitÃ©s de **contributions**

![](images/clipboard-torch0130.png)
![](images/clipboard-torch0142.png)
:::

## Installation

Nominale

![](images/clipboard-install_.png)

AvancÃ©e

![](images/clipboard-install-adv.png)

::: footer
https://torch.mlverse.org/docs/articles/installation.html
:::

------------------------------------------------------------------------

Expert : Machine sans connexion

![](images/clipboard-install-airgap.png)

Expert : dÃ©verminage

```{r}}
Sys.setenv(TORCH_INSTALL_DEBUG = 1)
install_torch()

?install_torch()
```

::: footer
https://torch.mlverse.org/docs/articles/installation.html
:::

## La pile logicielle

![](images/clipboard-1623978672.png){height=60%}

## La manipulation de tenseurs

::::: columns
::: {.column width="50%"}
![](images/clipboard-1496841808.png)
:::

::: {.column width="50%"}
```{r, echo=TRUE}
library(torch)
tt <- torch_rand(2, 3, 4)
tt
```

:::
:::::

------------------------------------------------------------------------

:::::: columns

:::: {.column width="50%"}
::: small

![](images/clipboard-4006123911.png)

```{r, echo=TRUE}
tt[, 2:N, ]
```

:::
::::

:::: {.column width="50%"}
::: small

```{r, echo=TRUE}
tt[1, 2:N, ]
tt[1:1, 2:N, ]
torch_squeeze(tt[1:1, 2:N, ])
```

:::
::::
::::::

------------------------------------------------------------------------

:::::: columns

:::: {.column width="50%"}
![](images/clipboard-torch_device.png)

::: small

```{r, echo=TRUE}
tt$to(device = "cpu")
```

:::
::::

:::: {.column width="50%"}
::: small

```{r, echo=TRUE}
as.array(tt$to(device = "cpu"))
```

:::
::::
::::::

## Ã€ vous de jouer, exercices

Installations : `00_installation.R`

```{r}
countdown(
  minutes = 2,
  # Fanfare when it's over
  play_sound = TRUE,
  # Set timer theme to match solarized colors
  color_border              = "#FFFFFF",
  color_text                = "#7aa81e",
  color_running_background  = "#7aa81e",
  color_running_text        = "#FFFFFF",
  color_finished_background = "#ffa07a",
  color_finished_text       = "#FFFFFF",
  font_size = "2em",
  )
```

------------------------------------------------------------------------

Exercice : `01_exercice.`

```{r}
countdown(
  minutes = 5,
  # Fanfare when it's over
  play_sound = TRUE,
  # Set timer theme to match solarized colors
  color_border              = "#FFFFFF",
  color_text                = "#7aa81e",
  color_running_background  = "#7aa81e",
  color_running_text        = "#FFFFFF",
  color_finished_background = "#ffa07a",
  color_finished_text       = "#FFFFFF",
  font_size = "2em",
  )
```

## les `nn_modules`: construire un rÃ©seau

::: small

```{r}
#| echo: true
net <- nn_module(
  "Net",
  initialize = function(num_class) {
    self$conv1 <- nn_conv2d(1, 32, 3, 1)
    self$conv2 <- nn_conv2d(32, 64, 3, 1)
    self$dropout1 <- nn_dropout(0.25)
    self$dropout2 <- nn_dropout(0.5)
    self$fc1 <- nn_linear(9216, 128)
    self$fc2 <- nn_linear(128, num_class)
  },
  forward = function(x) {
    x %>% 
      self$conv1() %>% 
      nnf_relu() %>% 
      self$conv2() %>% 
      nnf_relu() %>% 
      nnf_max_pool2d(2) %>% 
      self$dropout1() %>% 
      torch_flatten(start_dim = 2) %>% 
      self$fc1() %>% 
      nnf_relu() %>% 
      self$dropout2() %>% 
      self$fc2()
  }
)
```

:::


## entraÃ®ner un rÃ©seau avec luz {.small}

```{r}
#| eval: false
#| echo: true
fitted <- net %>%
  setup(
    loss = nn_cross_entropy_loss(),
    optimizer = optim_ignite_adam,
    metrics = list(
      luz_metric_accuracy()
    )
  ) %>%
  set_hparams(num_class = 10) %>% 
  set_opt_hparams(lr = 0.003) %>%
  fit(train_dl, epochs = 10, valid_data = test_dl)
```

------------------------------------------------------------------------

Exercice : `02_exercice.`

```{r}
countdown(
  minutes = 5,
  # Fanfare when it's over
  play_sound = TRUE,
  # Set timer theme to match solarized colors
  color_border              = "#FFFFFF",
  color_text                = "#7aa81e",
  color_running_background  = "#7aa81e",
  color_running_text        = "#FFFFFF",
  color_finished_background = "#ffa07a",
  color_finished_text       = "#FFFFFF",
  font_size = "2em",
  )
```

# mlverse

## Un univers de ðŸ“¦ dÃ©diÃ©s Ã  {torch}

![Packages du mlverse / utilisant torch](images/tile_mlverse.png)

## Un univers de ðŸ“¦ en franÃ§ais

::: small
| paquetage | messages | l'aide[^1] | les vignettes |
|------------------|------------------|-------------------|------------------|
| {torch} | `r fontawesome::fa("check", fill = fa_fill)` |  |  |
| {torchvision} | `r fontawesome::fa("check", fill = fa_fill)` | `r fontawesome::fa("check", fill = fa_fill)` [/torchvision.fr](https://github.com/cregouby/torchvision.fr) |  |
| {tabnet} | `r fontawesome::fa("check", fill = fa_fill)` | `r fontawesome::fa("check", fill = fa_fill)` [/tabnet.fr](https://github.com/cregouby/tabnet.fr) |  |
| {luz} | `r fontawesome::fa("check", fill = fa_fill)` | `r fontawesome::fa("check", fill = fa_fill)` [/luz.fr](https://github.com/cregouby/luz.fr) | `r fontawesome::fa("check", fill = fa_fill)` [cregouby.github.io/luz.fr/](https://cregouby.github.io/luz.fr/)|
| {hfhub} | `r fontawesome::fa("check", fill = fa_fill)` | `r fontawesome::fa("check", fill = fa_fill)` [/hfhub.fr](https://github.com/cregouby/hfhub.fr) |  |
| {tok} | `r fontawesome::fa("check", fill = fa_fill)` | `r fontawesome::fa("check", fill = fa_fill)` [/tok.fr](https://github.com/cregouby/tok.fr) |  |
| {safetensors} | `r fontawesome::fa("check", fill = fa_fill)` | `r fontawesome::fa("check", fill = fa_fill)` [/safetensors.fr](https://github.com/cregouby/safetensors.fr) |  |
| {minhub} | `r fontawesome::fa("check", fill = fa_fill)`[^2] | `r fontawesome::fa("check", fill = fa_fill)` [/minhub.fr](https://github.com/cregouby/minhub.fr) |  |

: Les paquetages disponibles en franÃ§ais

[^1]: https://github.com/cregouby/
[^2]: P.R. en cours

:::

------------------------------------------------------------------------

```{r, eval=FALSE, echo=TRUE}
Sys.setLanguage(lang = "fr")
library(torchvision)
transform_normalize(torch::torch_rand(c(3,5,5)), 3, 0)
```

![](images/clipboard-3331382707.png)

------------------------------------------------------------------------

::::: columns
::: {.column width="40%"}

```{r, echo=TRUE}
Sys.setenv(LANGUAGE="fr")
library(torchvision.fr)
library(torchvision)
?transform_normalize
```

:::

::: {.column width="60%"}
![](images/clipboard-1958985727.png)
:::
:::::

{{< include _tabnet.qmd >}}

{{< include _nlp.qmd >}}

{{< include _image_classifier.qmd >}}
