---
title: "HappyR {torch} {tabnet} and friends"
author: "Christophe Regouby"
footer:  "[{torch} {tabnet} and friends](https://github.com/cregouby/happyR-torch-slides)"
logo: "images/mlverse.png"
format: 
  revealjs: 
    theme: [night, slides.scss]
    highlight-style: a11y
    transition: fade
    slide-number: true
    chalkboard: true
editor: visual
execute:
  freeze: auto
---

# Agenda

Getting started

{torch}

mlverse

{tabnet}

{tabnet} pour la regression avec valeurs manquantes

{tabnet} pour la classification hierarchique

GPT2 avec R

Fine-Tuning de GPT2 en franÃ§ais avec un LORA

Un classifieur d'images avec ResNext50 fine-tuning

# Getting started

------------------------------------------------------------------------

![](images/clipboard-1733121037.png)

------------------------------------------------------------------------

```{r}
library(countdown)
```

```{r font-awesome-color}
# fill for font awesome icons
fa_fill <- "#C7B41D"
```

## Licensing

<br> <br> This work is licensed under a [Creative Commons Attribution-ShareAlike 4.0 International License](https://creativecommons.org/licenses/by-sa/4.0/) (CC BY-SA4.0).

## Checklist

<br>

`r fontawesome::fa("check", fill = fa_fill)` R & RStudio installed?

Â Â Â Â  I'm on 4.4.1 and 2024.08.0 build 351

`r fontawesome::fa("check", fill = fa_fill)` {torch} installed?

Â Â Â Â  `torch::torch_is_installed()`<br> Â Â Â Â  *Your system is ready!*

`r fontawesome::fa("check", fill = fa_fill)` Any {torch} device ?

Â Â Â Â  `torch::backends_xxxx_is_available()`<br> Â Â Â Â  *Your system has power!*

## Autres ressources {.smaller}

-   torch for R *website* <br> <https://torch.mlverse.org/>

-   Deep-Learning and scientific computing with R *book* <br> <https://skeydan.github.io/Deep-Learning-and-Scientific-Computing-with-R-torch/>

-   torch for R *cheatsheet* <br> <https://rstudio.github.io/cheatsheets/torch.pdf>

-   Deep-learning avec torch *Aide-mÃ©moire* <br> <https://github.com/rstudio/cheatsheets/blob/main/translations/french/torch_fr.pdf>

-   Tutoriel de UseR2021! <https://github.com/mlverse/torch-learnr>

-   Tutoriel des RencontresR 2024 par Tristan Mary-Huard : <https://stateofther.github.io/finistR2022/autodiff.html>

-   le blog AI de Posit (avec la catÃ©gorie torch): <https://blogs.rstudio.com/ai/#category:Torch>

::: footer
:::

# {torch}

## ![](images/clipboard-3520749809.png)![](images/clipboard-4058077362.png)

## ![](images/clipboard-154709511.png)

::: footer
source https://xkcd.com/1987/
:::

## ![](images/clipboard-1267880778.png)

::: footer
source https://xkcd.com/1987/
:::

## [![](images/clipboard-604787592.png)](https://torch.mlverse.org/)

::: footer
et {torchdatasets}, {tok}, {hfhub}, {safetensors}, {tabnet}, {ETM}, {tft}, {innsight}, {brulee},...
:::

![](images/clipboard-419128090.png)

## {torch} : pourquoi rÃ©inventer l'eau chaude?

::: small
```         
-   facilitÃ© d'installation CPU, GPU, MPS, ...

-   frugalitÃ© d'installation

-   confort de RStudio pour dÃ©velopper, dÃ©verminer, visualiser

-   confort de R pour l'indexation Ã  1

-   la qualitÃ© des articles de blog de Posit AI blog

-   l'Ã©cosystÃ¨me des packages

-   plein de possibilitÃ©s de contributions

    ![](images/clipboard-872398520.png)
```
:::

## Installation

Nominale

![](images/clipboard-1225111648.png)

AvancÃ©e

![](images/clipboard-2395058596.png)

::: footer
https://torch.mlverse.org/docs/articles/installation.html
:::

------------------------------------------------------------------------

Expert : air-gap server

![](images/clipboard-3643950338.png)

Expert : dÃ©verminage

```{r}}
Sys.setenv(TORCH_INSTALL_DEBUG = 1)
install_torch()

?install_torch()
```

::: footer
https://torch.mlverse.org/docs/articles/installation.html
:::

## La pile logicielle

![](images/clipboard-1623978672.png)

## La manipulation de tenseurs

::::: columns
::: {.column width="50%"}
![](images/clipboard-1496841808.png)
:::

::: {.column width="50%"}
```{r, echo=TRUE}
library(torch)
tt <- torch_rand(2, 3, 4)
tt
```
:::
:::::

------------------------------------------------------------------------

:::::: columns
::: {.column width="50%"}
![](images/clipboard-4006123911.png)
:::

:::: {.column width="50%"}
::: small
```{r, echo=TRUE}
tt[, 2:N, ]
tt[1, 2:N, ]
tt[1:1, 2:N, ]
torch_squeeze(tt[1:1, 2:N, ])
```
:::
::::
::::::

## Ã€ vous de jouer, exercise 01

Installations : \`00_installation.R\`\`

```{r}
countdown(
  minutes = 2,
  # Fanfare when it's over
  play_sound = TRUE,
  # Set timer theme to match solarized colors
  color_border              = "#FFFFFF",
  color_text                = "#7aa81e",
  color_running_background  = "#7aa81e",
  color_running_text        = "#FFFFFF",
  color_finished_background = "#ffa07a",
  color_finished_text       = "#FFFFFF",
  font_size = "2em",
  )
```

------------------------------------------------------------------------

Exercice : \`01_exercice.R\`\`

```{r}
countdown(
  minutes = 5,
  # Fanfare when it's over
  play_sound = TRUE,
  # Set timer theme to match solarized colors
  color_border              = "#FFFFFF",
  color_text                = "#7aa81e",
  color_running_background  = "#7aa81e",
  color_running_text        = "#FFFFFF",
  color_finished_background = "#ffa07a",
  color_finished_text       = "#FFFFFF",
  font_size = "2em",
  )
```

# mlverse

## Un univers de ðŸ“¦ dÃ©diÃ©s Ã  {torch}

------------------------------------------------------------------------

## Un univers de ðŸ“¦ en franÃ§ais

::: small
| paquet | les messages | l'aide | les vignettes |
|------------------|------------------|-------------------|------------------|
| {torch} | `r fontawesome::fa("check", fill = fa_fill)`[^1] |  |  |
| {torchvision} | `r fontawesome::fa("check", fill = fa_fill)` | `r fontawesome::fa("check", fill = fa_fill)` [cregouby/torchvision.fr](https://github.com/cregouby/torchvision.fr) |  |
| {tabnet} | `r fontawesome::fa("check", fill = fa_fill)` | `r fontawesome::fa("check", fill = fa_fill)` [cregouby/tabnet.fr](https://github.com/cregouby/tabnet.fr) |  |
| {luz} | `r fontawesome::fa("check", fill = fa_fill)` | `r fontawesome::fa("check", fill = fa_fill)` [cregouby/luz.fr](https://github.com/cregouby/luz.fr) |  |
| {hfhub} | `r fontawesome::fa("check", fill = fa_fill)` | `r fontawesome::fa("check", fill = fa_fill)` [cregouby/hfhub.fr](https://github.com/cregouby/hfhub.fr) |  |
| {tok} | `r fontawesome::fa("check", fill = fa_fill)` | `r fontawesome::fa("check", fill = fa_fill)` [cregouby/tok.fr](https://github.com/cregouby/tok.fr) |  |
| {safetensors} | `r fontawesome::fa("check", fill = fa_fill)` | `r fontawesome::fa("check", fill = fa_fill)` [cregouby/safetensors.fr](https://github.com/cregouby/safetensors.fr) |  |

: Les paquets disponibles en franÃ§ais
:::

[^1]: P.R en cours

------------------------------------------------------------------------

```{r, eval=FALSE, echo=TRUE}
Sys.setLanguage(lang = "fr")
library(torchvision)
transform_normalize(torch::torch_rand(c(3,5,5)), 3, 0)
```

![](images/clipboard-3331382707.png)

------------------------------------------------------------------------

::::: columns
::: {.column width="40%"}
```{r, echo=TRUE}
Sys.setenv(LANGUAGE="fr")
library(torchvision.fr)
library(torchvision)
?transform_normalize
```
:::

::: {.column width="60%"}
![](images/clipboard-1958985727.png)
:::
:::::

# {tabnet}

## ![](images/clipboard-534052795.png)

v0.6.0 is on CRAN

## Fonctionnement

![](images/clipboard-2272997678.png)

## Usage intÃ©grÃ© dans tidymodels

::: small
Dataset

```{r}
#| label: "dataset"
#| echo: true
library(tidymodels, quietly = TRUE)
data("ames", package = "modeldata")
str(ames)
```

Recipe

```{r}
#| label: "tabnet recipe"
#| echo: true
ames <- ames |> mutate(Sale_Price = log10(Sale_Price))
ames_rec <- recipe(Sale_Price ~ ., data=ames) |> 
  step_normalize(all_numeric(), -all_outcomes()) 
```
:::

::: footer
:::

------------------------------------------------------------------------

::: small
Pre-training

```{r}
#| label: "tabnet pretrain"
#| cache: true
#| echo: true
library(tabnet)
ames_pretrain <- tabnet_pretrain(
  ames_rec, data=ames,  epoch=50, cat_emb_dim = 1,
  valid_split = 0.2, verbose=TRUE, 
  early_stopping_patience = 3L, 
  early_stopping_tolerance = 1e-4
)
# model diagnostic
autoplot(ames_pretrain)
```
:::

------------------------------------------------------------------------

::: small
Training

```{r}
#| label: "tabnet fit"
#| cache: true
#| echo: true
ames_fit <- tabnet_fit(ames_rec, data=ames,  tabnet_model = ames_pretrain, 
                       epoch=50, cat_emb_dim = 1, 
                       valid_split = 0.2, verbose=TRUE, batch=2930, 
                       early_stopping_patience = 5L, 
                       early_stopping_tolerance = 1e-4)
# model diagnostic
autoplot(ames_fit)
```
:::

------------------------------------------------------------------------

:::::: small
Prediction

::::: columns
::: {.column width="30%"}
```{r}
#| label: "tabnet predict"
#| echo: true
predict(ames_fit, ames)
```
:::

::: {.column width="70%"}
```{r}
#| label: "tabnet vip"
#| echo: true
# variable importance
vip::vip(ames_fit)
```
:::
:::::
::::::

------------------------------------------------------------------------

::: small
Explainability

```{r}
#| label: "tabnet explain"
#| echo: true
ames_explain <- tabnet::tabnet_explain(ames_fit, ames)
# variable importance
autoplot(ames_explain, quantile = 0.99)
```
:::

## Ã€ vous de jouer, exercise 02

::: question
Complete 02_exercise to practice tabnet model training.
:::

```{r}
countdown(
  minutes = 7
  )
```

::: footer
:::

# {tabnet} pour les valeurs manquantes

## retour sur le jeu de donnÃ©es Ames

:::: small
-   les tenseurs ne peuvent pas inclure de valeur manquantes.

-   `ames` nous fait le plaisir d'Ãªtre sans valeur manquante.

::: question
Quelle est la surface de la piscine quand il n'y a pas de piscine?
:::
::::

------------------------------------------------------------------------

```{r, echo=TRUE}
data("ames", package = "modeldata")
qplot(ames$Mas_Vnr_Area)
```

::: question
Comment le modÃ¨le peut-il capturer cette distribution ?
:::

---

Et si on l'applique Ã  toute les colonnes ?

::: small

```{r}
#| echo: TRUE
#| code-fold: TRUE
col_with_zero_as_na <- ames %>% 
  select(where(is.numeric)) %>% 
  select(matches("_SF|Area|Misc_Val|[Pp]orch$")) %>% 
  summarise_each(min) %>% 
  select_if(~.x==0) %>% 
  names()
ames_missing <- ames %>% mutate_at(col_with_zero_as_na, na_if, 0) %>% 
  mutate_at("Alley", na_if, "No_Alley_Access") %>% 
  mutate_at("Fence", na_if, "No_Fence") %>% 
  mutate_at(c("Garage_Cond", "Garage_Finish"), na_if, "No_Garage") %>% 
  mutate_at(c("Bsmt_Exposure", "BsmtFin_Type_1", "BsmtFin_Type_2"), na_if, "No_Basement")

visdat::vis_miss(ames_missing)
```

:::

---

::: small

Recipe

```{r}
#| label: "tabnet missing recipe"
#| echo: true
ames_missing <- ames_missing |> mutate(Sale_Price = log10(Sale_Price))
ames_missing_rec <- recipe(Sale_Price ~ ., data=ames_missing) |> 
  step_normalize(all_numeric(), -all_outcomes()) 
```

Pre-training

```{r}
#| label: "tabnet missing  pretrain"
#| cache: true
#| echo: true
library(tabnet)
ames_missing_pretrain <- tabnet_pretrain(
  ames_missing_rec, data=ames_missing,  epoch=50, cat_emb_dim = 1,
  valid_split = 0.2, verbose=TRUE, 
  early_stopping_patience = 3L, 
  early_stopping_tolerance = 1e-4
)
# model diagnostic
autoplot(ames_missing_pretrain)
```
:::

------------------------------------------------------------------------

::: small
Training

```{r}
#| label: "tabnet missing  fit"
#| cache: true
#| echo: true
ames_missing_fit <- tabnet_fit(
  ames_missing_rec,   data = ames_missing,
  tabnet_model = ames_missing_pretrain,
  epoch = 50,  cat_emb_dim = 1,  valid_split = 0.2,
  verbose = TRUE,  batch = 2930,
  early_stopping_patience = 5L,
  early_stopping_tolerance = 1e-4
)
# model diagnostic
autoplot(ames_missing_fit)
```
:::

------------------------------------------------------------------------

:::::: small
Prediction

::::: columns
::: {.column width="30%"}
```{r}
#| label: "tabnet missing  predict"
#| echo: true
predict(ames_missing_fit, ames_missing)
```
:::

::: {.column width="70%"}

```{r}
#| echo: TRUE
#| code-fold: TRUE
 
col_with_missings <- ames_missing %>%
  summarise_all(~sum(is.na(.))>0) %>%
  t %>% enframe(name="Variable") %>% 
  rename(has_missing="value")

vip_color <- function(object, col_has_missing) {
  vip_data <- vip::vip(object)$data %>% arrange(Importance)
  vis_miss_plus <- left_join(vip_data, col_has_missing , by="Variable") %>%
    mutate(Variable=factor(Variable, levels = vip_data$Variable))
  vis_miss_plus
  ggplot(vis_miss_plus, aes(x=Variable, y=Importance, fill=has_missing)) +
    geom_col() + coord_flip() + scale_fill_grey()
}
vip_color(ames_pretrain, col_with_missings)
```


```{r}
#| label: "tabnet missing  vip"
#| echo: true
# variable importance
vip_color(ames_missing_fit, col_with_missings)
```
:::
:::::
::::::

------------------------------------------------------------------------

::: small
Explainability

```{r}
#| label: "tabnet missing  explain"
#| echo: true
ames_missing_explain <- tabnet::tabnet_explain(ames_missing_fit, ames_missing)
# variable importance
autoplot(ames_missing_explain, quantile = 0.99)
```
:::



# GPT2 avec R

## 

## Your turn, exercise 03

<br>

```{r, eval=FALSE, echo=TRUE}
# already installed in the Posit Cloud work space
# install.packages("devtools")
# devtools::install_github("rstats-wtf/wtfdbg")
```

<br>

::: question
Complete 03_exercise to practice debugging others' code.
:::

```{r}
countdown(
  minutes = 10
  )
```

::: footer
<https://github.com/rstats-wtf/wtf-debugging>
:::

# Fine-Tuning de GPT2 en franÃ§ais avec un LORA

# Un classifieur d'images avec ResNext50 fine-tuning

# Une tÃªte de classification hiÃ©rarchique Ã  {tabnet}

## Pick your favorite

![](img/debugging_pick.svg)

# Wrap-up

## Go forth, <br> and learn from your bugs!

:::::: columns
::: {.column width="53%"}
![](img/butterflies.gif){fig-align="center"}
:::

::: {.column width="2%"}
:::

::: {.column width="45%"}
`r fontawesome::fa("road", fill = "white")` traceback

<br>

`r fontawesome::fa("bug", fill = "white")` interactive debugger

<br>

`r fontawesome::fa("magnifying-glass", fill = "white")` your code Â  vs Â  <br> `r fontawesome::fa("hat-wizard", fill = "white")` their code
:::
::::::

::: footer
<https://giphy.com/gifs/TreehouseDirect-max-and-ruby-maxandruby-maxruby-S3qtrEqiU5OuwAtg5Z>
:::
